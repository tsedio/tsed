(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{768:function(e,t,s){"use strict";s.r(t);var a=s(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"contributing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contributing"}},[e._v("#")]),e._v(" Contributing")]),e._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),s("p",[e._v("First, thank you for considering contributing to Ts.ED! It is people like you that make the open source community such a great community! ðŸ˜Š")]),e._v(" "),s("p",[e._v("We welcome any type of contribution, not just code. You can help with:")]),e._v(" "),s("ul",[s("li",[e._v("QA: file bug reports, the more details you can give the better (e.g. screenshots with the console open).")]),e._v(" "),s("li",[e._v("Marketing: writing blog posts, how to's, printing stickers....")]),e._v(" "),s("li",[e._v("Community: presenting the project at meetups, organizing a dedicated meetup for the local community....")]),e._v(" "),s("li",[e._v("Code: take a look at the "),s("a",{attrs:{href:"https://github.com/tsedio/tsed/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("open issues"),s("OutboundLink")],1),e._v(". Even if you can't write code, commenting on them and showing that you care about a given issue matters. It helps us triage them.")]),e._v(" "),s("li",[e._v("Money: we welcome financial contributions in full transparency on our "),s("a",{attrs:{href:"https://opencollective.com/tsed",target:"_blank",rel:"noopener noreferrer"}},[e._v("open collective"),s("OutboundLink")],1),e._v(".")])]),e._v(" "),s("h2",{attrs:{id:"your-first-contribution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#your-first-contribution"}},[e._v("#")]),e._v(" Your First Contribution")]),e._v(" "),s("p",[e._v("Working on your first Pull Request? You can learn how from this free series: "),s("a",{attrs:{href:"https://app.egghead.io/playlists/how-to-contribute-to-an-open-source-project-on-github",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to Contribute to an Open Source Project on GitHub"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"submitting-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submitting-code"}},[e._v("#")]),e._v(" Submitting code")]),e._v(" "),s("p",[e._v("Any code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.")]),e._v(" "),s("p",[e._v("The bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge. It is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Ts.ED project uses "),s("a",{attrs:{href:"https://www.conventionalcommits.org/en/v1.0.0-beta.4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("conventional commits"),s("OutboundLink")],1),e._v(" as format commit message.")]),e._v(" "),s("p",[e._v("Release note and tagging version are based on the message commits.\nIf you don't follow the format, our CI won't be able to increment the version correctly and your feature won't be released on NPM.")]),e._v(" "),s("p",[e._v("To write your commit message, see "),s("a",{attrs:{href:"https://www.conventionalcommits.org/en/v1.0.0-beta.4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("convention page here"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"financial-contributions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#financial-contributions"}},[e._v("#")]),e._v(" Financial contributions")]),e._v(" "),s("p",[e._v('We also welcome financial contributions in full transparency on our open collective. Anyone can file an expense. If the expense makes sense for the development of the community, it will be "merged" in the ledger of our '),s("a",{attrs:{href:"https://opencollective.com/tsed",target:"_blank",rel:"noopener noreferrer"}},[e._v("open collective"),s("OutboundLink")],1),e._v(" by the core contributors, and the person who filed the expense will be reimbursed.")]),e._v(" "),s("h2",{attrs:{id:"questions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#questions"}},[e._v("#")]),e._v(" Questions")]),e._v(" "),s("p",[e._v("If you have any questions, create an "),s("a",{attrs:{href:"https://github.com/tsedio/tsed/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue"),s("OutboundLink")],1),e._v(" (protip: do a quick search first to see if someone else didn't ask the same question before!). You can also reach us at hello@tsed.opencollective.com.")]),e._v(" "),s("h2",{attrs:{id:"how-to-work-on-ts-ed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-work-on-ts-ed"}},[e._v("#")]),e._v(" How to work on Ts.ED")]),e._v(" "),s("h3",{attrs:{id:"setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),s("p",[e._v("Clone your fork of the repository:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/YOUR_USERNAME/tsed.git\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Install npm dependencies with yarn (not with NPM!):")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("blockquote",[s("p",[e._v("After installing dependencies, yarn/npm run the "),s("code",[e._v("postinstall")]),e._v(" hook and mount all packages with "),s("code",[e._v("npm link")]),e._v(" (e.g. "),s("code",[e._v("yarn run repo:bootstrap")]),e._v(").")])]),e._v(" "),s("p",[e._v("Compile TypeScript:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("tsc\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# or")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" tsc\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# or")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run tsc\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h3",{attrs:{id:"test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[e._v("#")]),e._v(" Test")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# or")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h3",{attrs:{id:"gflow-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gflow-optional"}},[e._v("#")]),e._v(" Gflow (optional)")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/gflow",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gflow"),s("OutboundLink")],1),e._v(" is a command line tool to help developers with the Git process used in Ts.ED.")]),e._v(" "),s("p",[e._v("Gflow helps you create a branch from production, rebase and run the tests before pushing your branch on your remote repository.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g gflow\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"start-a-feature-branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-a-feature-branch"}},[e._v("#")]),e._v(" Start a feature branch")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" fetch\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" branch --no-track -b feat-branch-name origin/production  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# !IMPORTANT")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## OR")]),e._v("\ngflow new feat name_of_feat\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("h3",{attrs:{id:"commit-push-a-feature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-push-a-feature"}},[e._v("#")]),e._v(" Commit & Push a feature")]),e._v(" "),s("p",[e._v("This command rebases your branch feature from the production branch, runs the test, and pushes your branch.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"feat(domain): Your message"')]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("blockquote",[s("p",[e._v("To write your commit message see "),s("a",{attrs:{href:"https://www.conventionalcommits.org/en/v1.0.0-beta.4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("convention page"),s("OutboundLink")],1),e._v(".")])]),e._v(" "),s("p",[e._v("Then:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" fetch\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase origin/production\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push -f\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# OR using gflow (run fetch, rebase and push for you)")]),e._v("\ngflow push\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("When your feature is ready to review, you can open a PR on Ts.ED github.")]),e._v(" "),s("h3",{attrs:{id:"finish-a-feature-repo-owner-and-maintainers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#finish-a-feature-repo-owner-and-maintainers"}},[e._v("#")]),e._v(" Finish a feature (repo owner and maintainers)")]),e._v(" "),s("p",[e._v("After the PR has been accepted, the feature will be automatically merged on the master branch, but\nyour feature isn't merged with the production branch.")]),e._v(" "),s("p",[e._v("To publish your feature on the production branch you need to run this command:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("gflow finish\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("This action works only on the Ts.ED repository (not on your fork).")])]),e._v(" "),s("h3",{attrs:{id:"write-documentation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#write-documentation"}},[e._v("#")]),e._v(" Write documentation")]),e._v(" "),s("p",[e._v("Ts.ED uses docsify to convert markdown to HTML. In addition, all documentation in your code will be used to generate\nthe API documentation. To preview your comments on a class you can run this command:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm run doc:serve\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"guidelines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#guidelines"}},[e._v("#")]),e._v(" Guidelines")]),e._v(" "),s("ul",[s("li",[e._v("Ts.ED follows the git flow to generate a release note. To write your commit message see "),s("a",{attrs:{href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit",target:"_blank",rel:"noopener noreferrer"}},[e._v("convention page"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("li",[e._v("Please try to combine multiple commits before pushing.")]),e._v(" "),s("li",[e._v("Please use TDD when fixing bugs. This means that you should write a unit test that fails because it reproduces the issue, fixes the issue, and then finally runs the test to ensure that the issue has been resolved. This helps us prevent fixed bugs from happening again in the future.")]),e._v(" "),s("li",[e._v("Please keep the test coverage at 100%. Write additional unit tests if necessary.")]),e._v(" "),s("li",[e._v("Please create an issue before sending a PR if it is going to change the public interface of Ts.ED or include significant architecture changes.")]),e._v(" "),s("li",[e._v("Feel free to ask for help from other members of the Ts.ED team.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);